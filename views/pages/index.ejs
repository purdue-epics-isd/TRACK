<!DOCTYPE html>
<html>

<head>
    <title>Login</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bluebird/3.3.4/bluebird.min.js"></script>
    <script src="https://secure.aadcdn.microsoftonline-p.com/lib/1.0.0/js/msal.js"></script>
    <link rel="stylesheet" href="../css/global.css" />
    <link rel="stylesheet" href="../css/home.css" />
</head>

<body>
    <section>
        <!--<div class="item-a">
            <h1>IEP GOAL TRACKER</h1>
            <h3>Welcome to ISD IEP Tracker!</h3>
            <button id="SignIn" class="btn btn-primary center" onclick="signIn()">Sign In Here</button>
        </div> -->
        <!--<div class="bottom">
            <img src="img/epics_logo.png" style="width: 25%">
        </div> -->
        <div class = "centerPage">
            <h2>IEP GOAL TRACKER</h2>
            <!--<h3>Welcome to ISD IEP Tracker!</h3>-->
            <button id="SignIn" class="btn btn-primary center" onclick="signIn()">Sign In</button>
        </div>

        <form style="display: none" id="submitForm" method="post">
            <input type="hidden" name="useremail" id="useremail"> </input>
            <script>
                var email = document.getElementById('useremail');
                email.value = localStorage.getItem("username");
            </script>
        </form>
    </section>

</body>

<script>
    var msalConfig = {
        auth: {
            clientId: "f4238741-ebe5-4017-94b5-4de9dc3c20b8",
            authority: "https://login.microsoftonline.com/organizations",
        },
        cache: {
            cacheLocation: "localStorage",
            storeAuthStateInCookie: true
        }
    };

    var graphConfig = {
        graphMeEndpoint: "https://graph.microsoft.com/v1.0/me"
    };

    // this can be used for login or token request, however in more complex situations
    // this can have diverging options
    var requestObj = {
        scopes: ["user.read"]
    };

    var myMSALObj = new Msal.UserAgentApplication(msalConfig);
    // Register Callbacks for redirect flow
    if (<%= logout %> == true) {
        console.log("Signing you out\n");
        //sleep(10000000000);
        myMSALObj.logout();
    } else {
        console.log("You are signed in\n");
        //sleep(10000000000);
    }

    myMSALObj.handleRedirectCallback(authRedirectCallBack);

    function signIn() {
        //localStorage.setItem("username",myMSALObj.getAccount().username);
        myMSALObj.loginPopup(requestObj).then(function (loginResponse) {
            //Login Success
            //showWelcomeMessage();
            acquireTokenPopupAndCallMSGraph();
        }).catch(function (error) {
            console.log(error);
        });
    }

    function callMSGraph(theUrl, accessToken, callback) {
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200)
                callback(JSON.parse(this.responseText));
        }
        xmlHttp.open("GET", theUrl, true); // true for asynchronous
        xmlHttp.setRequestHeader('Authorization', 'Bearer ' + accessToken);
        xmlHttp.send();
    }

    function acquireTokenPopupAndCallMSGraph() {
        //Always start with acquireTokenSilent to obtain a token in the signed in user from cache
        myMSALObj.acquireTokenSilent(requestObj).then(function (tokenResponse) {
            callMSGraph(graphConfig.graphMeEndpoint, tokenResponse.accessToken, graphAPICallback);
        }).catch(function (error) {
            console.log(error);
            // Upon acquireTokenSilent failure (due to consent or interaction or login required ONLY)
            // Call acquireTokenPopup(popup window)
            if (requiresInteraction(error.errorCode)) {
                myMSALObj.acquireTokenPopup(requestObj).then(function (tokenResponse) {
                    callMSGraph(graphConfig.graphMeEndpoint, tokenResponse.accessToken, graphAPICallback);
                }).catch(function (error) {
                    console.log(error);
                });
            }
        });
    }

    function graphAPICallback(data) {
        console.log(data.id);
        console.log(typeof data.id);
        localStorage.setItem("userID", data.id);
        localStorage.setItem("username", myMSALObj.getAccount().userName);
        //console.log(myMSALObj.getAccount());
        console.log("\nJust the name... \n" + myMSALObj.getAccount().userName);
        //console.log();
        window.location.href = "./classPage";
        //document.getElementById("json").innerHTML = JSON.stringify(data, null, 2);
    }

    function showWelcomeMessage() {
        var divWelcome = document.getElementById('WelcomeMessage');
        console.log("YOEY:" + myMSALObj);
        if (myMSALObj) {
            console.log("IN");
            if (myMSALObj.getAccount()) {
                //divWelcome.innerHTML = 'Welcome ' + myMSALObj.getAccount().userName + " to Purdue EPICS ISD IEP Tracker";
            }
        }
        var loginbutton = document.getElementById('SignIn');
        loginbutton.innerHTML = 'Move on to site';
        loginbutton.setAttribute('onclick', 'signOut();');
    }

    //This function can be removed if you do not need to support IE
    function acquireTokenRedirectAndCallMSGraph() {
        //Always start with acquireTokenSilent to obtain a token in the signed in user from cache
        myMSALObj.acquireTokenSilent(requestObj).then(function (tokenResponse) {
            callMSGraph(graphConfig.graphMeEndpoint, tokenResponse.accessToken, graphAPICallback);
        }).catch(function (error) {
            console.log(error);
            // Upon acquireTokenSilent failure (due to consent or interaction or login required ONLY)
            // Call acquireTokenRedirect
            if (requiresInteraction(error.errorCode)) {
                myMSALObj.acquireTokenRedirect(requestObj);
            }
        });
    }

    function authRedirectCallBack(error, response) {
        if (error) {
            console.log(error);
        }
        else {
            if (response.tokenType === "access_token") {
                callMSGraph(graphConfig.graphEndpoint, response.accessToken, graphAPICallback);
            } else {
                console.log("token type is:" + response.tokenType);
            }
        }
    }

    function requiresInteraction(errorCode) {
        if (!errorCode || !errorCode.length) {
            return false;
        }
        return errorCode === "consent_required" ||
            errorCode === "interaction_required" ||
            errorCode === "login_required";
    }

    // Browser check variables
    var ua = window.navigator.userAgent;
    var msie = ua.indexOf('MSIE ');
    var msie11 = ua.indexOf('Trident/');
    var msedge = ua.indexOf('Edge/');
    var isIE = msie > 0 || msie11 > 0;
    var isEdge = msedge > 0;
    //If you support IE, our recommendation is that you sign-in using Redirect APIs
    //If you as a developer are testing using Edge InPrivate mode, please add "isEdge" to the if check
    // can change this to default an experience outside browser use
    var loginType = isIE ? "REDIRECT" : "POPUP";

    if (loginType === 'POPUP') {
        if (myMSALObj.getAccount()) {// avoid duplicate code execution on page load in case of iframe and popup window.
            showWelcomeMessage();
            acquireTokenPopupAndCallMSGraph();
        }
    }
    else if (loginType === 'REDIRECT') {
        document.getElementById("SignIn").onclick = function () {
            myMSALObj.loginRedirect(requestObj);
        };
        if (myMSALObj.getAccount() && !myMSALObj.isCallback(window.location.hash)) {// avoid duplicate code execution on page load in case of iframe and popup window.
            showWelcomeMessage();
            acquireTokenRedirectAndCallMSGraph();
        }
    } else {
        console.error('Please set a valid login type');
    }
</script>
</body>

</html>